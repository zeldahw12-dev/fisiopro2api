# =========================
# App
# =========================
spring.application.name=fisio

# =========================
# Server (Railway expone PORT)
# =========================
server.port=${PORT:8080}
server.servlet.context-path=/api

# =========================
# Datasource (Railway MySQL)
#   Railway define: MYSQLHOST, MYSQLPORT, MYSQLUSER, MYSQLPASSWORD, MYSQLDATABASE
#   Fallbacks para local: DB_HOST, DB_PORT, DB_USER, DB_PASS, DB_NAME
# =========================
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQLHOST:${DB_HOST:localhost}}:${MYSQLPORT:${DB_PORT:3306}}/${MYSQLDATABASE:${DB_NAME:fisio}}?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=${MYSQLUSER:${DB_USER:root}}
spring.datasource.password=${MYSQLPASSWORD:${DB_PASS:root}}

# =========================
# JPA / Hibernate
#   Cambia DDL_AUTO a 'validate' en prod (o usa env DDL_AUTO=validate)
# =========================
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${JPA_FORMAT_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
# Forzar UTC (también reforzado en JpaConfig)
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jackson.time-zone=UTC

# =========================
# Logging
# =========================
logging.level.org.springframework.security=${SECURITY_LOG_LEVEL:INFO}
logging.level.org.hibernate.SQL=${HIBERNATE_SQL_LOG:OFF}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${HIBERNATE_BIND_LOG:OFF}

# =========================
# CORS centralizado (ver CorsConfig)
#   En dev: CORS_ALLOWED_ORIGINS=*
#   En prod: CORS_ALLOWED_ORIGINS=https://tu-dominio.com,exp://192.168.0.10:19000
# =========================
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:*}

# =========================
# Seguridad / JWT (ver SecurityConfig)
#   Durante la migración: APP_PERMIT_ALL=true
#   En prod: APP_PERMIT_ALL=false (exigir JWT)
# =========================
app.security.permit-all=${APP_PERMIT_ALL:true}
app.jwt.secret=${APP_JWT_SECRET:dev-secret-please-change-and-set-env}
app.jwt.issuer=${APP_JWT_ISSUER:}

# =========================
# Mail (no dejes credenciales en el repo)
#   Configura variables de entorno: SMTP_HOST, SMTP_PORT, SMTP_USER, SMTP_PASS
# =========================
spring.mail.host=${SMTP_HOST:smtp.gmail.com}
spring.mail.port=${SMTP_PORT:587}
spring.mail.username=${SMTP_USER:}
spring.mail.password=${SMTP_PASS:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# Remitente por defecto
app.mail.from=${MAIL_FROM:FisioApp <no-reply@fisioapp.local>}
# Si quieres ?modo log only? en dev:
app.mail.log-only=${MAIL_LOG_ONLY:true}
spring.jpa.open-in-view=false

# Pool pequeño para reducir contención en MySQL compartido
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1

# Hibernate: batches y orden
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# =========================
# Signup (si usas verificación por código)
# =========================
app.signup.code.expiration-minutes=${SIGNUP_CODE_TTL_MIN:10}
app.signup.code.max-attempts=${SIGNUP_CODE_MAX_ATTEMPTS:5}

# =========================
# Springdoc / Actuator (opcional)
# =========================
management.endpoints.web.exposure.include=${ACTUATOR_EXPOSE:health,info}
management.endpoint.health.probes.enabled=true
